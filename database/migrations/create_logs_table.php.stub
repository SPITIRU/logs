<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

class CreateLogsTable extends Migration
{
    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        $tableNames = config('artLog.table_names');
        $columnNames = config('artLog.column_names');

        if (empty($tableNames)) {
            throw new \Exception('Error: config/artLog.php not loaded. Run [php artisan config:clear] and try again.');
        }

        Schema::create($tableNames['model_has_permissions'], function (Blueprint $table) use ($tableNames, $columnNames) {
            $table->integer('logID', true);
            $table->integer('profileID');
            $table->integer('userID');
            $table->text('message');
            $table->integer('typeID');
            $table->boolean('isRead');
            $table->timestamps();

            $table->foreign('profileID')
                ->references('profileID')
                ->on('profiles')
                ->onUpdate('RESTRICT')
                ->onDelete('CASCADE');

            $table->foreign('userID')
                ->references('userID')
                ->on('users')
                ->onUpdate('RESTRICT')
                ->onDelete('CASCADE');
        });
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        $tableNames = config('permission.table_names');

        if (empty($tableNames)) {
            throw new \Exception('Error: config/permission.php not found and defaults could not be merged. Please publish the package configuration before proceeding, or drop the tables manually.');
        }

        Schema::drop($tableNames['role_has_permissions']);
        Schema::drop($tableNames['model_has_roles']);
        Schema::drop($tableNames['model_has_permissions']);
        Schema::drop($tableNames['roles']);
        Schema::drop($tableNames['permissions']);
    }
}
